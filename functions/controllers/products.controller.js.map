{"version":3,"sources":["../../src/controllers/products.controller.ts"],"sourcesContent":["import { NextFunction, Request, Response } from 'express';\nimport { Container } from 'typedi';\nimport { Product} from '@interfaces/product.interface';\nimport { ProductsService } from '@services/products.service';\n\nexport class ProductController {\n  public products = Container.get(ProductsService);\n\n  public getProducts = async (req: Request, res: Response, next: NextFunction) => {\n    const subdomain : any = req.query.sub\n\n    try {\n      const findAllProductsData: Product[] = await this.products.findAllProducts(subdomain);\n  \n\n      res.status(200).json({ data: findAllProductsData, message: 'findAll' });\n    } catch (error) {\n      next(error);\n    }\n  };\n}\n"],"names":["ProductController","products","Container","get","ProductsService","getProducts","req","res","next","subdomain","query","sub","findAllProductsData","findAllProducts","status","json","data","message","error"],"mappings":";;;;+BAKaA;;aAAAA;;wBAJa;iCAEM;;;;;;;;;;;;;;AAEzB,IAAA,AAAMA,oBAAN,MAAMA;;QACX,uBAAOC,YAAWC,iBAAS,CAACC,GAAG,CAACC,gCAAe;QAE/C,uBAAOC,eAAc,OAAOC,KAAcC,KAAeC,OAAuB;YAC9E,MAAMC,YAAkBH,IAAII,KAAK,CAACC,GAAG;YAErC,IAAI;gBACF,MAAMC,sBAAiC,MAAM,IAAI,CAACX,QAAQ,CAACY,eAAe,CAACJ;gBAG3EF,IAAIO,MAAM,CAAC,KAAKC,IAAI,CAAC;oBAAEC,MAAMJ;oBAAqBK,SAAS;gBAAU;YACvE,EAAE,OAAOC,OAAO;gBACdV,KAAKU;YACP;QACF;;AACF"}